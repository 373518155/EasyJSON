/*
参考资料
教大家如何一步一步的将自己的开源项目上传到jcenter   https://blog.csdn.net/csdn576038874/article/details/79308391
手把手教你发布自己的开源库到 Jcenter   https://mp.weixin.qq.com/s/0CB5262TOvQoBJRQwrbWiA
Gradle 第七讲 之 android插件的入门2 SourceSets   https://blog.csdn.net/u010479969/article/details/50262731
自定义task生成jar包   https://blog.csdn.net/u010479969/article/details/77008842
发布 Android Library 到 JCenter 从入门到放弃   https://www.jianshu.com/p/5a3d485fda1d
Android 发布开源库到 JitPack、jCenter    https://www.jianshu.com/p/b7552cf8983b
【有关审核的一些情况】   Android拓展系列(12)--使用Gradle发布aar项目到JCenter仓库   https://www.cnblogs.com/qianxudetianxia/p/4322331.html


发布插件
https://github.com/novoda/bintray-release
https://github.com/bintray/gradle-bintray-plugin   这是官方的


打tag相关命令
对当前commit打tag
git tag -a "v1.0.0" -m "初始版本"
对指定commit打tag
git tag -a "v1.0.0" b83cf207958838b4f42415ed654610843ce9d438 -m "初始版本"
推送tag到远端
git push origin master --tags


相关命令(先在Android Studio底部打开 Terminal标签)
生成jar包的命令
gradlew install(还有gradlew sourcesJar、 gradlew javadocJar这些命令可以试试)

上传jar包到bintray上的命令
gradlew bintrayUpload

直接应用远程插件的方法
apply from: 'https://raw.githubusercontent.com/chendongMarch/Resource/master/jcenter/bintrayUpload.gradle'



上传后，jcenter未审核前，可以这样引用上传的jar文件
repositories {
     maven {
         url  "https://dl.bintray.com/[YOUR_USERNAME]/<REPOSITORY_NAME>"
     }
}


 */


apply plugin: 'java-library'

//添加这两行
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

//项目主页
def siteUrl = 'https://github.com/373518155/EasyJSON'
//项目的git地址
def gitUrl = 'https://github.com/373518155/EasyJSON.git'
//发布到JCenter上的项目名字
def libName = "EasyJSON"

//发布到组织名称名字，必须填写
//（com.ssy.fireworkstextview）这样写是不好的，项目名会拼上去
//我手欠然后最后就是这样了，大家引以为戒
//compile 'com.ssy.fireworkstextview:fireworkstextview:1.0.0'
group = "cn.snailpad"
// 版本号，下次更新是只需要更改版本号即可
version = "1.0.29"
//上面配置后上传至JCenter后的编译路径是这样的： compile 'me.songning.CircleView:library:1.0.0'

//生成源文件
task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}



//上传到JCenter所需要的源码文件
artifacts {
    archives sourcesJar
}

// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                //项目描述，随意填
                name 'Easy JSON Library'
                url siteUrl
                licenses {
                    license {
                        //开源协议
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        //开发者的个人信息
                        id 'billybottle'
                        name 'BillyBottle'
                        email 'sysuzwm1985@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

//上传到JCenter
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")   //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        //注意：这里的repo值必须要和你创建Maven仓库的时候的名字一样
        repo = "EasyJSON"
        //发布到JCenter上的项目名字
        name = "EasyJSON"
        //项目描述
        desc = 'Easy JSON Library'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

javadoc {
    options{
        //如果你的项目里面有中文注释的话，必须将格式设置为UTF-8，不然会出现乱码
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
